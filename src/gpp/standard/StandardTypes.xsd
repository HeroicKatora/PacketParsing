<?xml version="1.1" encoding="UTF-8"?>
<xs:schema xmlns="http://github.com/HeroicKatora/PacketParsing/Standard"
	targetNamespace="http://github.com/HeroicKatora/PacketParsing/Standard"
	xmlns:gpp="http://github.com/HeroicKatora/PacketParsing"
	xmlns:std="http://github.com/HeroicKatora/PacketParsing/Standard"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	elementFormDefault="qualified">
	<xs:annotation><xs:documentation>This is part of the library ggp.builtin</xs:documentation></xs:annotation>
	<xs:import namespace="http://github.com/HeroicKatora/PacketParsing"
				schemaLocation="./PacketSchema.xsd"/>

	<xs:element name="outformat">
		<xs:complexType>
			<xs:attribute name="formatstring" type="integer_oformat"/>
		</xs:complexType>
	</xs:element>

	<xs:simpleType name="integer_oformat">
		<xs:restriction base="xs:string">
			<xs:pattern value=".*\{:((\+|-)?0?\d*(b|o|d|x|X)|0?\d*c)\}.*"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:element name="enum_fallback" type="gpp:display_handle_descriptor"/>

	<xs:element name="enumeration" substitutionGroup="gpp:display_basehandler">
		<xs:complexType>
			<xs:complexContent>
				<xs:restriction base="gpp:handle">
					<xs:sequence>
						<xs:element ref="enum_fallback" minOccurs="0" maxOccurs="1"/>
						<xs:element name="enumvalue" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:choice>
									<xs:element ref="gpp:builtin"/>
									<xs:element ref="gpp:parsed"/>
								</xs:choice>
								<xs:attribute name="mnemonic" type="xs:string"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:restriction>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:simpleType name="integral_subtype">
		<xs:restriction base="xs:string">
			<xs:pattern value="([0-9]*)bit|char|byte|short|int|long|uint8|uint16|uint32"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:element name="display_integral" substitutionGroup="gpp:display_basehandler">
		<xs:complexType>
			<xs:complexContent>
				<xs:restriction base="gpp:handle">
					<xs:attribute name="formatstring" type="integer_oformat" use="optional"/>
				</xs:restriction>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="integral" substitutionGroup="gpp:type_basehandler">
		<xs:complexType>
			<xs:complexContent>
				<xs:restriction base="gpp:handle">
   					<xs:attribute name="subtype" type="integral_subtype" default="int"/>
					<xs:attribute name="formatstring" type="integer_oformat" use="optional"/>
				</xs:restriction>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="field" substitutionGroup="gpp:module">
		<xs:annotation><xs:documentation>Promotes a type to a module</xs:documentation></xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:restriction base="gpp:module">
					<xs:sequence>
						<xs:annotation><xs:documentation>When a value occurs inside a field reading fails when the read value is unmatched by all of them.</xs:documentation></xs:annotation>
						<xs:element ref="gpp:parsed" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attribute name="type" use="required" type="gpp:packet_parsing_identifier"/>
					<xs:attribute name="displayname" use="optional" type="xs:string"/>
				</xs:restriction>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="sequence" substitutionGroup="gpp:module">
		<xs:complexType>
			<xs:complexContent>
				<xs:restriction base="gpp:module">
					<xs:sequence minOccurs="1" maxOccurs="unbounded">
						<xs:element ref="gpp:submodule"/>
					</xs:sequence>
				</xs:restriction>
			</xs:complexContent>
		</xs:complexType>
		<xs:key name="sequence_unique_pythonname">
			<xs:selector xpath="gpp:submodule"></xs:selector>
			<xs:field xpath="@pythonname"></xs:field>
		</xs:key>
	</xs:element>

</xs:schema>
